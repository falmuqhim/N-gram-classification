package NGramClassification;

import java.awt.Dimension;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 * This is a GUI that reduces protein grams and do calculations for N grams
 * combinations You just need select the input files which include: 1- cluster
 * file 2- positive dataset 3- negative dataset Then, you can choose the output
 * directory for your output files You can also specify the other parameters
 * which are: Allowed letters and the value of N
 *
 *
 * All of the work flow of this project are written in NGramFrequenct class
 *
 * @author falmuqhim
 */
public class MainForm extends javax.swing.JFrame {

    JFileChooser fileChooser;    
    File reductionFile;
    File positiveFile;
    File negativeFile;
    File directory;
    Integer progress = 0;
    JFileChooser DSfileChooser;
    JFileChooser GSfileChooser;
    JFileChooser directoryChooser;
    File sequenceFile;
    File sequenceFile1;
    File DSdirectory;
    File DSdirectory1;
    File GSFile;
    Filter filter1;
    File GSdirectory;
    File cDirectory;
    File cDirectory1;
    File controlPositiveFile;
    File controlNegativeFile;
    File controlSequenceFile;
    JFileChooser chooser = new JFileChooser();
    JFileChooser cDirectoryChooser = new JFileChooser();
    JFileChooser cDirectoryChooser1 = new JFileChooser();
    JFileChooser DSchooser = new JFileChooser();
    JFileChooser GSchooser = new JFileChooser();

    DefaultListModel listModel;
    ArrayList<Integer> disregardList = new ArrayList();
    ArrayList<Integer> takeList = new ArrayList();
    
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        
        disregardL.setVisible(false);
        disregardTF.setVisible(false);
        takeTF.setVisible(false);
        takeL.setVisible(false);
        chunkListL.setVisible(false);
        exampleL.setVisible(false);
        tableL.setVisible(false);
        setChunkL.setVisible(false);
        
        addChunkBTN.setVisible(false);
        firstChunkL.setVisible(false);
        firstChunkTF.setVisible(false);
        chunkList.setVisible(false);
        jScrollPane2.setVisible(false);
        removeChunkBTN.setVisible(false);

        progressBar.setValue(progress);
        reductionFile = null;
        positiveFile = null;
        negativeFile = null;
        directory = null;
        controlPositiveFile = null;
        controlNegativeFile = null;
        controlNegativeFile = null;
        
        fileChooser = new JFileChooser();

        fileChooser.addChoosableFileFilter(new Filter());
        fileChooser.setAcceptAllFileFilterUsed(false);

        //add filter to accept only uppercase letters in allowed letters feild
        DocumentFilter filter = new UppercaseDocumentFilter();
        ((AbstractDocument) allowedLetters.getDocument()).setDocumentFilter(filter);
        sequenceFile = null;
        DSdirectory = null;
        sequenceFile1 = null;
        DSdirectory1 = null;
        GSFile = null;
        DSfileChooser = new JFileChooser();
        GSfileChooser = new JFileChooser();
        
        directoryChooser = new JFileChooser();
        directoryChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        DSfileChooser.addChoosableFileFilter(new Filter());
        DSfileChooser.setAcceptAllFileFilterUsed(false);
        
        filter1 = new Filter();
        GSfileChooser.addChoosableFileFilter(filter1);
        GSfileChooser.setAcceptAllFileFilterUsed(false);
        
        listModel = new DefaultListModel();
        
        chunkList.setModel(listModel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        positiveFileTF = new javax.swing.JTextField();
        reductionFileBTN = new javax.swing.JButton();
        positiveFileBTN = new javax.swing.JButton();
        negaiveFileBTN = new javax.swing.JButton();
        reductionFileTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        positiveFileTF1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        directoryTF = new javax.swing.JTextField();
        directoryBTN = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        allowedLetters = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        NTF = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        advanceSettings = new javax.swing.JCheckBox();
        tableL = new javax.swing.JLabel();
        exampleL = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chunkList = new javax.swing.JList();
        firstChunkL = new javax.swing.JLabel();
        firstChunkTF = new javax.swing.JTextField();
        disregardL = new javax.swing.JLabel();
        disregardTF = new javax.swing.JTextField();
        takeL = new javax.swing.JLabel();
        takeTF = new javax.swing.JTextField();
        addChunkBTN = new javax.swing.JButton();
        setChunkL = new javax.swing.JLabel();
        removeChunkBTN = new javax.swing.JButton();
        chunkListL = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        runBTN = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        sequenceFileTF = new javax.swing.JTextField();
        outputDirectoryTF = new javax.swing.JTextField();
        sequenceBTN = new javax.swing.JButton();
        outputBTN = new javax.swing.JButton();
        runBTN1 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        sequenceFileTF1 = new javax.swing.JTextField();
        outputDirectoryTF1 = new javax.swing.JTextField();
        sequenceBTN1 = new javax.swing.JButton();
        outputBTN1 = new javax.swing.JButton();
        runBTN2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        startTF = new javax.swing.JTextField();
        endTF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        gSequenceFileTF = new javax.swing.JTextField();
        gOutputDirectoryTF = new javax.swing.JTextField();
        sequenceBTN2 = new javax.swing.JButton();
        outputBTN2 = new javax.swing.JButton();
        runBTN3 = new javax.swing.JButton();
        sequenceLengthTF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        included = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        controlPositiveFileTF = new javax.swing.JTextField();
        controlPositiveFileBTN = new javax.swing.JButton();
        controlNegaiveFileBTN = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        controlNegativeFileTF = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cOutputDirectoryTF = new javax.swing.JTextField();
        cOutputBTN = new javax.swing.JButton();
        outputBTN5 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        controlSequenceFileTF = new javax.swing.JTextField();
        controlSequenceFileBTN = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cOutputDirectoryTF1 = new javax.swing.JTextField();
        cOutputBTN1 = new javax.swing.JButton();
        outputBTN6 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        gStatsFileTF = new javax.swing.JTextField();
        gOutputStatsDirectoryTF = new javax.swing.JTextField();
        statsSequenceBTN = new javax.swing.JButton();
        statsOutputBTN = new javax.swing.JButton();
        runBTN4 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        gStatsFileTF1 = new javax.swing.JTextField();
        gOutputStatsDirectoryTF1 = new javax.swing.JTextField();
        statsSequenceBTN1 = new javax.swing.JButton();
        statsOutputBTN1 = new javax.swing.JButton();
        runBTN5 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        gStatsFileTF2 = new javax.swing.JTextField();
        statsSequenceBTN2 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        gStatsFileTF3 = new javax.swing.JTextField();
        statsSequenceBTN3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NGramClassification");
        setBackground(jPanel1.getBackground());
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose Input Files"));

        positiveFileTF.setEnabled(false);

        reductionFileBTN.setText("Choose ...");
        reductionFileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainForm.this.actionPerformed(evt);
            }
        });

        positiveFileBTN.setText("Choose ...");
        positiveFileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainForm.this.actionPerformed(evt);
            }
        });

        negaiveFileBTN.setText("Choose ...");
        negaiveFileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainForm.this.actionPerformed(evt);
            }
        });

        reductionFileTF.setEnabled(false);

        jLabel2.setText("Clusters file");

        jLabel3.setText("Positive File");

        jLabel4.setText("Negative File");

        positiveFileTF1.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(positiveFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(positiveFileBTN))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(positiveFileTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(negaiveFileBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(reductionFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reductionFileBTN))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(reductionFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reductionFileBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positiveFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(positiveFileBTN)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(negaiveFileBTN)
                    .addComponent(jLabel4)
                    .addComponent(positiveFileTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Output Directory"));

        directoryTF.setEnabled(false);

        directoryBTN.setText("Select ...");
        directoryBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainForm.this.actionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(directoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directoryBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directoryBTN)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Additional Parameters"));

        allowedLetters.setText("BJUXZO");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel5.setText("<html>These letters will be used to reduce the amino acids</html>");

        jLabel6.setText("Allowed Letters");

        jLabel7.setText("N value");

        NTF.setText("3");

        advanceSettings.setText("Advance settings");
        advanceSettings.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                advanceSettingsStateChanged(evt);
            }
        });

        tableL.setText("<html><body> <table border=\"1\"> <tr> <td style=\"background-color:green\">B</td> <td style=\"background-color:green\">J</td>\n<td style=\"background-color:yellow\">Z</td> <td style=\"background-color:green\">B</td> <td>J</td> <td>B</td> <td>Z</td> </tr> </table> </body></html>");

        exampleL.setText("Example: First chunk: 2, disregard: 1, second chunk: 1");

        jScrollPane2.setViewportView(chunkList);

        firstChunkL.setText("First Chuck:");

        firstChunkTF.setText("2");

        disregardL.setText("Disregard:");

        disregardTF.setText("1");

        takeL.setText("Take:");

        takeTF.setText("1");

        addChunkBTN.setText("Add");
        addChunkBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChunkBTNActionPerformed(evt);
            }
        });

        setChunkL.setText("Set the following chucks:");

        removeChunkBTN.setText("Remove");
        removeChunkBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeChunkBTNActionPerformed(evt);
            }
        });

        chunkListL.setText("Chuck List:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(advanceSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chunkListL)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(allowedLetters, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(NTF, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(tableL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeChunkBTN))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(disregardL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(disregardTF, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(takeL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(takeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addChunkBTN))
                            .addComponent(exampleL)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(setChunkL)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(firstChunkL)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(firstChunkTF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(allowedLetters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(NTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(advanceSettings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstChunkL)
                    .addComponent(firstChunkTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(setChunkL)
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disregardL)
                    .addComponent(disregardTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(takeL)
                    .addComponent(takeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addChunkBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chunkListL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeChunkBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exampleL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Progress"));

        progressBar.setStringPainted(true);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("N-Gram-Frequency");

        runBTN.setText("Run");
        runBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(216, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(278, 278, 278))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(runBTN)
                .addGap(337, 337, 337))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runBTN))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("NGram Classification", jPanel6);

        jPanel8.setBackground(new java.awt.Color(245, 245, 245));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Remove Duplicate"));

        jLabel8.setText("Sequence File");

        jLabel9.setText("Output Directory");

        sequenceFileTF.setEnabled(false);

        outputDirectoryTF.setEnabled(false);

        sequenceBTN.setText("Choose ...");
        sequenceBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceBTNactionPerformed(evt);
            }
        });

        outputBTN.setText("Select ...");
        outputBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputBTNactionPerformed(evt);
            }
        });

        runBTN1.setText("Run");
        runBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBTN1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sequenceFileTF, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(outputDirectoryTF))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(runBTN1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sequenceBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sequenceFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sequenceBTN))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(outputDirectoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(runBTN1)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Remove By Range"));

        jLabel10.setText("Sequence File");

        jLabel11.setText("Output Directory");

        sequenceFileTF1.setEnabled(false);

        outputDirectoryTF1.setEnabled(false);

        sequenceBTN1.setText("Choose ...");
        sequenceBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceBTN1actionPerformed(evt);
            }
        });

        outputBTN1.setText("Select ...");
        outputBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputBTNactionPerformed(evt);
            }
        });

        runBTN2.setText("Run");
        runBTN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBTN2ActionPerformed(evt);
            }
        });

        jLabel12.setText("<= Sequence <=");

        startTF.setText("20");

        endTF.setText("100");

        jLabel13.setText("Sequence Range:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(27, 27, 27)
                        .addComponent(sequenceFileTF1))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(startTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(endTF, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 143, Short.MAX_VALUE))
                            .addComponent(outputDirectoryTF1))))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(runBTN2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputBTN1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sequenceBTN1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(sequenceFileTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sequenceBTN1))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(outputDirectoryTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputBTN1))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(startTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(endTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runBTN2))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(196, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(146, 146, 146))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Distinct Sequence", jPanel8);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Generate Sequences"));

        jLabel14.setText("Sequence File");

        jLabel15.setText("Output Directory");

        gSequenceFileTF.setEnabled(false);

        gOutputDirectoryTF.setEnabled(false);

        sequenceBTN2.setText("Choose ...");
        sequenceBTN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceBTN2actionPerformed(evt);
            }
        });

        outputBTN2.setText("Select ...");
        outputBTN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceBTN2actionPerformed(evt);
            }
        });

        runBTN3.setText("Run");
        runBTN3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBTN3ActionPerformed(evt);
            }
        });

        sequenceLengthTF.setText("30");

        jLabel17.setText("Sequence Length:");

        included.setText("Include sequences that are less than the given length");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15))
                                        .addGap(18, 18, 18)
                                        .addComponent(gSequenceFileTF))
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addGap(134, 134, 134)
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(gOutputDirectoryTF)
                                            .addComponent(sequenceLengthTF))))
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addGap(0, 142, Short.MAX_VALUE)
                                .addComponent(included)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(outputBTN2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sequenceBTN2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(runBTN3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(gSequenceFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sequenceBTN2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(gOutputDirectoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputBTN2))
                .addGap(6, 6, 6)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(sequenceLengthTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(included)
                .addGap(2, 2, 2)
                .addComponent(runBTN3)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(448, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Generate Sequences", jPanel7);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Control from two files"));

        controlPositiveFileTF.setEnabled(false);

        controlPositiveFileBTN.setText("Choose ...");
        controlPositiveFileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlSelectActionPerformed(evt);
            }
        });

        controlNegaiveFileBTN.setText("Choose ...");
        controlNegaiveFileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlSelectActionPerformed(evt);
            }
        });

        jLabel21.setText("Positive File");

        jLabel22.setText("Negative File");

        controlNegativeFileTF.setEnabled(false);

        jLabel20.setText("Output Directory");

        cOutputDirectoryTF.setEnabled(false);

        cOutputBTN.setText("Select ...");
        cOutputBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlSelectActionPerformed(evt);
            }
        });

        outputBTN5.setText("Run");
        outputBTN5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputBTN5sequenceBTN2actionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(22, 22, 22)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlPositiveFileTF, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(controlNegativeFileTF)
                    .addComponent(cOutputDirectoryTF))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(controlNegaiveFileBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controlPositiveFileBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cOutputBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputBTN5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(controlPositiveFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(controlPositiveFileBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(controlNegativeFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(controlNegaiveFileBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(cOutputDirectoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cOutputBTN))
                .addGap(18, 18, 18)
                .addComponent(outputBTN5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Control from one file"));

        controlSequenceFileTF.setEnabled(false);

        controlSequenceFileBTN.setText("Choose ...");
        controlSequenceFileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlSequenceFileBTNcontrolSelectActionPerformed(evt);
            }
        });

        jLabel23.setText("Sequence File");

        jLabel25.setText("Output Directory");

        cOutputDirectoryTF1.setEnabled(false);

        cOutputBTN1.setText("Select ...");
        cOutputBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlSequenceFileBTNcontrolSelectActionPerformed(evt);
            }
        });

        outputBTN6.setText("Run");
        outputBTN6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputBTN6sequenceBTN2actionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(outputBTN6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel25))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(controlSequenceFileTF, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(controlSequenceFileBTN))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(cOutputDirectoryTF1)
                                .addGap(18, 18, 18)
                                .addComponent(cOutputBTN1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(controlSequenceFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(controlSequenceFileBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cOutputDirectoryTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cOutputBTN1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputBTN6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(193, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(147, 147, 147))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(346, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Control", jPanel12);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Generate Sequences"));

        jLabel16.setText("Sequence File");

        jLabel18.setText("Output Directory");

        gStatsFileTF.setEnabled(false);

        gOutputStatsDirectoryTF.setEnabled(false);

        statsSequenceBTN.setText("Choose ...");
        statsSequenceBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsSequenceBTNactionPerformed(evt);
            }
        });

        statsOutputBTN.setText("Select ...");
        statsOutputBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsSequenceBTNactionPerformed(evt);
            }
        });

        runBTN4.setText("Run");
        runBTN4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBTN4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel18))
                                .addGap(22, 22, 22)
                                .addComponent(gStatsFileTF, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(gOutputStatsDirectoryTF)))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(statsOutputBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statsSequenceBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(runBTN4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(gStatsFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statsSequenceBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(gOutputStatsDirectoryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statsOutputBTN))
                .addGap(18, 18, 18)
                .addComponent(runBTN4)
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(448, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Generate Stats", jPanel13);

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Matching"));

        jLabel19.setText("Original Sequence File");

        jLabel24.setText("Output Directory");

        gStatsFileTF1.setEnabled(false);

        gOutputStatsDirectoryTF1.setEnabled(false);

        statsSequenceBTN1.setText("Choose ...");
        statsSequenceBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsSequenceBTN1ActionPerformed(evt);
            }
        });

        statsOutputBTN1.setText("Select ...");
        statsOutputBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsSequenceBTN1ActionPerformed(evt);
            }
        });

        runBTN5.setText("Run");
        runBTN5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBTN5ActionPerformed(evt);
            }
        });

        jLabel26.setText("Divided Sequence File");

        gStatsFileTF2.setEnabled(false);

        statsSequenceBTN2.setText("Choose ...");
        statsSequenceBTN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsSequenceBTN1ActionPerformed(evt);
            }
        });

        jLabel27.setText("Predicted Sequence File");

        gStatsFileTF3.setEnabled(false);

        statsSequenceBTN3.setText("Choose ...");
        statsSequenceBTN3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsSequenceBTN1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(runBTN5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel26))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gStatsFileTF2, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                                    .addComponent(gStatsFileTF1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(statsSequenceBTN1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(statsSequenceBTN2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel24))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gStatsFileTF3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gOutputStatsDirectoryTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statsSequenceBTN3, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(statsOutputBTN1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(gStatsFileTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statsSequenceBTN1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(gStatsFileTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statsSequenceBTN2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(gStatsFileTF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statsSequenceBTN3))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statsOutputBTN1)
                    .addComponent(gOutputStatsDirectoryTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(32, 32, 32)
                .addComponent(runBTN5)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(399, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Matching", jPanel17);

        jMenu1.setText("File");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 497, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 497, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 346, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 346, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateInput() {
        if (reductionFile == null || positiveFile == null
                || negativeFile == null || directory == null) {
            JOptionPane.showMessageDialog(this,
                    "Please select all the files and the directory for the "
                    + "output to run the program.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String regex = "\\d+";
            if (!advanceSettings.isSelected()) {
                if (!NTF.getText().matches(regex) || NTF.getText().equals("0")) {
                    JOptionPane.showMessageDialog(this,
                            "Please enter a valid value for N", "Error",
                            JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }
            if (advanceSettings.isSelected()) {
                if (!firstChunkTF.getText().matches(regex) || firstChunkTF.getText().equals("0")) {
                    JOptionPane.showMessageDialog(this,
                            "Please enter a valid value for first chunk", "Error",
                            JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                if (listModel.getSize() <= 0) {
                    JOptionPane.showMessageDialog(this,
                            "Please specify the disregard and carry for the chunks.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                
            }
        }

        return true;
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,
                "This application is developed to reduce the amino acid sequences and calcaulte NGram frequency. "
                + "\nIt allows you to customize the parameters which include allowed characters "
                + "\nto be used to reduce the amino acid and the value of N that is used to generate "
                + "\nthe grams and calculate the frequency. The application will first parse the "
                + "\ncluster's file. If the number of clusters is greater than the allowed characters, "
                + "\nthe gram will be represented using two-letters to maximize the available letters.",
                "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void runBTN2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBTN2ActionPerformed
        // TODO add your handling code here:
        if (sequenceFile1 == null || DSdirectory1 == null) {
            JOptionPane.showMessageDialog(this,
                "Please select the sequence file and the directory for the "
                + "output to run the program.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        String regex = "\\d+";
        if (!startTF.getText().matches(regex) || startTF.getText().startsWith("-")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid value for the start of the range", "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!endTF.getText().matches(regex) || endTF.getText().startsWith("-")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid value for the end of the range", "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        DistinctSequence ds = new DistinctSequence();
        int numberOfRemoved = ds.acceptByRange(sequenceFile1.getPath(),
            DSdirectory1.getPath() + "/", Integer.parseInt(startTF.getText()), Integer.parseInt(endTF.getText()));
        JOptionPane.showMessageDialog(this, numberOfRemoved + " have been removed from the sequence", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_runBTN2ActionPerformed

    private void outputBTNactionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputBTNactionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == sequenceBTN || evt.getSource() == sequenceBTN1) {
            int returnVal = DSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == sequenceBTN) {
                    sequenceFile = DSfileChooser.getSelectedFile();
                    sequenceFileTF.setText(sequenceFile.getName());
                }
                if (evt.getSource() == sequenceBTN1) {
                    sequenceFile1 = DSfileChooser.getSelectedFile();
                    sequenceFileTF1.setText(sequenceFile1.getName());
                }
            } else {
                System.out.println("closed by user");
            }
        }
        /**
        * chooser.setMultiSelectionEnabled(false);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int returnVal = chooser.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            directory = chooser.getSelectedFile();
            directoryTF.setText(directory.getPath());
        }
        */
        
        if (evt.getSource() == outputBTN || evt.getSource() == outputBTN1) {
            DSchooser.setMultiSelectionEnabled(false);
            DSchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int returnVal = DSchooser.showDialog(this, "Select");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == outputBTN) {
                    DSdirectory = DSchooser.getSelectedFile();
                    outputDirectoryTF.setText(DSdirectory.getAbsolutePath());
                }
                if (evt.getSource() == outputBTN1) {
                    DSdirectory1 = DSchooser.getSelectedFile();
                    outputDirectoryTF1.setText(DSdirectory1.getAbsolutePath());
                }
            } else {
                System.out.println("closed by user");
            }
        }
    }//GEN-LAST:event_outputBTNactionPerformed

    private void sequenceBTN1actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequenceBTN1actionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == sequenceBTN || evt.getSource() == sequenceBTN1) {
            int returnVal = DSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == sequenceBTN) {
                    sequenceFile = DSfileChooser.getSelectedFile();
                    sequenceFileTF.setText(sequenceFile.getName());
                }
                if (evt.getSource() == sequenceBTN1) {
                    sequenceFile1 = DSfileChooser.getSelectedFile();
                    sequenceFileTF1.setText(sequenceFile1.getName());
                }
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == outputBTN || evt.getSource() == outputBTN1) {
            int returnVal = directoryChooser.showDialog(this, "Select");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == outputBTN) {
                    DSdirectory = directoryChooser.getSelectedFile();
                    outputDirectoryTF.setText(DSdirectory.getAbsolutePath());
                }
                if (evt.getSource() == outputBTN1) {
                    DSdirectory1 = directoryChooser.getSelectedFile();
                    outputDirectoryTF1.setText(DSdirectory1.getAbsolutePath());
                }
            } else {
                System.out.println("closed by user");
            }
        }
    }//GEN-LAST:event_sequenceBTN1actionPerformed

    private void runBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBTN1ActionPerformed
        // TODO add your handling code here:
        if (sequenceFile == null || DSdirectory == null) {
            JOptionPane.showMessageDialog(this,
                "Please select the sequence file and the directory for the "
                + "output to run the program.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        DistinctSequence ds = new DistinctSequence();
        int numberOfDuplicate = ds.removeDuplicate(sequenceFile.getPath(), DSdirectory.getPath() + "/");
        JOptionPane.showMessageDialog(this, numberOfDuplicate + " have been removed from the sequence", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_runBTN1ActionPerformed

    private void sequenceBTNactionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequenceBTNactionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == sequenceBTN || evt.getSource() == sequenceBTN1) {
            int returnVal = DSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == sequenceBTN) {
                    sequenceFile = DSfileChooser.getSelectedFile();
                    sequenceFileTF.setText(sequenceFile.getName());
                }
                if (evt.getSource() == sequenceBTN1) {
                    sequenceFile1 = DSfileChooser.getSelectedFile();
                    sequenceFileTF1.setText(sequenceFile1.getName());
                }
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == outputBTN || evt.getSource() == outputBTN1) {
            int returnVal = directoryChooser.showDialog(this, "Select");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == outputBTN) {
                    DSdirectory = directoryChooser.getSelectedFile();
                    outputDirectoryTF.setText(DSdirectory.getAbsolutePath());
                }
                if (evt.getSource() == outputBTN1) {
                    DSdirectory1 = directoryChooser.getSelectedFile();
                    outputDirectoryTF1.setText(DSdirectory1.getAbsolutePath());
                }
            } else {
                System.out.println("closed by user");
            }
        }
    }//GEN-LAST:event_sequenceBTNactionPerformed

    /**
     * This is the action listener for Run button It is just generate an object
     * for NGramFrequency class, and the call the method "" to generate the
     * files
     *
     * @param evt
     */
    private void runBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBTNActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
        progressBar.setValue(0);

        if (validateInput()) {
            runBTN.setEnabled(false);
            if (advanceSettings.isSelected()) {

                int N = Integer.parseInt(firstChunkTF.getText());
                N += takeList.stream().mapToInt(Integer::intValue).sum();

                NGramFrequency gram = new NGramFrequency(positiveFile.getPath(), negativeFile.getPath(), reductionFile.getPath(), directory.getPath() + "/", allowedLetters.getText(), N, Integer.parseInt(firstChunkTF.getText()), 0, 0);
                gram.doProcessAdvance(progressBar, jTextArea1, disregardList, takeList);
                runBTN.setEnabled(true);
            } else {
                NGramFrequency gram = new NGramFrequency(positiveFile.getPath(), negativeFile.getPath(), reductionFile.getPath(), directory.getPath() + "/", allowedLetters.getText(), Integer.parseInt(NTF.getText()), 0, 0, 0);
                gram.doProcess(progressBar, jTextArea1);
                runBTN.setEnabled(true);
            }

        }
    }//GEN-LAST:event_runBTNActionPerformed

    private void removeChunkBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeChunkBTNActionPerformed
        // TODO add your handling code here:
        int size = listModel.getSize();
        if (size > 0) {
            listModel.remove(size-1);
            disregardList.remove(size-1);
            takeList.remove(size-1);
        }
        System.out.println(disregardList);
        System.out.println(takeList);
    }//GEN-LAST:event_removeChunkBTNActionPerformed

    private void addChunkBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChunkBTNActionPerformed
        // TODO add your handling code here:
        String regex = "\\d+";
        if (!disregardTF.getText().matches(regex) || disregardTF.getText().equals("0")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid value for Disregard", "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!takeTF.getText().matches(regex) || takeTF.getText().equals("0")) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid value for Take", "Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        listModel.addElement("Disregard: " + disregardTF.getText() + " - Take: " + takeTF.getText());
        disregardList.add(Integer.parseInt(disregardTF.getText()));
        takeList.add(Integer.parseInt(takeTF.getText()));
    }//GEN-LAST:event_addChunkBTNActionPerformed

    private void advanceSettingsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_advanceSettingsStateChanged
        // TODO add your handling code here:
        if (advanceSettings.isSelected()) {
            NTF.disable();
            disregardL.setVisible(true);
            disregardTF.setVisible(true);
            takeTF.setVisible(true);
            takeL.setVisible(true);
            chunkListL.setVisible(true);
            exampleL.setVisible(true);
            tableL.setVisible(true);
            setChunkL.setVisible(true);
            addChunkBTN.setVisible(true);
            firstChunkL.setVisible(true);
            firstChunkTF.setVisible(true);
            chunkList.setVisible(true);
            jScrollPane2.setVisible(true);
            removeChunkBTN.setVisible(true);
        } else {
            NTF.enable();
            disregardL.setVisible(false);
            disregardTF.setVisible(false);
            takeTF.setVisible(false);
            takeL.setVisible(false);
            chunkListL.setVisible(false);
            exampleL.setVisible(false);
            tableL.setVisible(false);
            setChunkL.setVisible(false);

            addChunkBTN.setVisible(false);
            firstChunkL.setVisible(false);
            firstChunkTF.setVisible(false);
            chunkList.setVisible(false);
            jScrollPane2.setVisible(false);
            removeChunkBTN.setVisible(false);
        }
    }//GEN-LAST:event_advanceSettingsStateChanged

    /**
     * This is the action listener for all the choosing files buttons
     *
     * @param evt
     */
    private void actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPerformed

        if (evt.getSource() == reductionFileBTN || evt.getSource()
            == positiveFileBTN || evt.getSource() == negaiveFileBTN) {
            int returnVal = fileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == reductionFileBTN) {
                    reductionFile = fileChooser.getSelectedFile();
                    reductionFileTF.setText(reductionFile.getName());
                } else if (evt.getSource() == positiveFileBTN) {
                    positiveFile = fileChooser.getSelectedFile();
                    positiveFileTF.setText(positiveFile.getName());
                } else if (evt.getSource() == negaiveFileBTN) {
                    negativeFile = fileChooser.getSelectedFile();
                    positiveFileTF1.setText(negativeFile.getName());
                }
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == directoryBTN) {
            chooser.setMultiSelectionEnabled(false);
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int returnVal = chooser.showDialog(this, "Select");

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                directory = chooser.getSelectedFile();
                directoryTF.setText(directory.getPath());
            }
        }
    }//GEN-LAST:event_actionPerformed

    private void sequenceBTN2actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequenceBTN2actionPerformed
        // TODO add your handling code here:
        //tap3 choose file
        if (evt.getSource() == sequenceBTN2) {
            int returnVal = GSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSFile = GSfileChooser.getSelectedFile();
                gSequenceFileTF.setText(GSFile.getName());
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == outputBTN2) {
            GSchooser.setMultiSelectionEnabled(false);
            GSchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int returnVal = GSchooser.showDialog(this, "Select");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSdirectory = GSchooser.getSelectedFile();
                gOutputDirectoryTF.setText(GSdirectory.getAbsolutePath());
                if (evt.getSource() == outputBTN) {
                }
                if (evt.getSource() == outputBTN1) {
                    DSdirectory1 = DSchooser.getSelectedFile();
                    outputDirectoryTF1.setText(DSdirectory1.getAbsolutePath());
                }
            } else {
                System.out.println("closed by user");
            }
        }
    }//GEN-LAST:event_sequenceBTN2actionPerformed

    private boolean validateInputGS() {
        if (GSFile == null || GSdirectory == null) {
            JOptionPane.showMessageDialog(this,
                    "Please select the sequence file and the directory for the "
                    + "output to run the program.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            String regex = "\\d+";
            if (!sequenceLengthTF.getText().matches(regex) || sequenceLengthTF.getText().equals("0")) {
                JOptionPane.showMessageDialog(this,
                        "Please enter a valid value for sequence length", "Error",
                        JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
    }
    
    private void runBTN3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBTN3ActionPerformed
        // TODO add your handling code here:
        if(!validateInputGS()) {
            return;
        }
        GenerateSequence gs = new GenerateSequence();
        int[] result = gs.generateSequences(GSFile.getPath(),
            GSdirectory.getPath() + "/", Integer.parseInt(sequenceLengthTF.getText()), included.isSelected());
        JOptionPane.showMessageDialog(this, result[0] + " have been generated "
                + "from the sequence file\n" + result[1] + " are sequences with "
                + "length less than the given length", "Information", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_runBTN3ActionPerformed

    
    private void outputBTN5sequenceBTN2actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputBTN5sequenceBTN2actionPerformed
        // TODO add your handling code here:
        if (controlPositiveFile == null || controlNegativeFile == null || cDirectory == null) {
            JOptionPane.showMessageDialog(this,
                    "Please select the sequence files and the directory for the "
                    + "output to run the program.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        Control control = new Control();
        int size = control.doControl(controlPositiveFile.getPath(), controlNegativeFile.getPath(), cDirectory.getPath() + "/");
        JOptionPane.showMessageDialog(this, size + " have been shuffled and divided into two files (poitive and negative)"
                , "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_outputBTN5sequenceBTN2actionPerformed

    private void controlSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlSelectActionPerformed
        
        if (evt.getSource() == controlPositiveFileBTN || evt.getSource()
            == controlNegaiveFileBTN) {
            int returnVal = fileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (evt.getSource() == controlPositiveFileBTN) {
                    controlPositiveFile = fileChooser.getSelectedFile();
                    controlPositiveFileTF.setText(controlPositiveFile.getName());
                } else if (evt.getSource() == controlNegaiveFileBTN) {
                    controlNegativeFile = fileChooser.getSelectedFile();
                    controlNegativeFileTF.setText(controlNegativeFile.getName());
                }
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == cOutputBTN) {
            
            cDirectoryChooser.setMultiSelectionEnabled(false);
            cDirectoryChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int returnVal = cDirectoryChooser.showDialog(this, "Select");

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                cDirectory = cDirectoryChooser.getSelectedFile();
                cOutputDirectoryTF.setText(cDirectory.getPath());
            }
        }
    }//GEN-LAST:event_controlSelectActionPerformed

    private void controlSequenceFileBTNcontrolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlSequenceFileBTNcontrolSelectActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == controlSequenceFileBTN) {
            int returnVal = fileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                controlSequenceFile = fileChooser.getSelectedFile();
                controlSequenceFileTF.setText(controlSequenceFile.getName());
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == cOutputBTN1) {
            
            cDirectoryChooser1.setMultiSelectionEnabled(false);
            cDirectoryChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int returnVal = cDirectoryChooser1.showDialog(this, "Select");

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                cDirectory1 = cDirectoryChooser1.getSelectedFile();
                cOutputDirectoryTF1.setText(cDirectory1.getPath());
            }
        }
    }//GEN-LAST:event_controlSequenceFileBTNcontrolSelectActionPerformed

    private void outputBTN6sequenceBTN2actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputBTN6sequenceBTN2actionPerformed
        // TODO add your handling code here:
        if (controlSequenceFile == null || cDirectory1 == null) {
            JOptionPane.showMessageDialog(this,
                    "Please select the sequence file and the directory for the "
                    + "output to run the program.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        Control control = new Control();
        int size = control.doControlOneFile(controlSequenceFile.getPath(), cDirectory1.getPath() + "/");
        JOptionPane.showMessageDialog(this, size + " have been shuffled and put back to the generated file"
                , "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_outputBTN6sequenceBTN2actionPerformed

    private void statsSequenceBTNactionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsSequenceBTNactionPerformed
        // TODO add your handling code here:
        //tap3 choose file
        if (evt.getSource() == statsSequenceBTN) {
            int returnVal = GSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSFile = GSfileChooser.getSelectedFile();
                gStatsFileTF.setText(GSFile.getName());
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == statsOutputBTN) {
            GSchooser.setMultiSelectionEnabled(false);
            GSchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int returnVal = GSchooser.showDialog(this, "Select");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSdirectory = GSchooser.getSelectedFile();
                gOutputStatsDirectoryTF.setText(GSdirectory.getAbsolutePath());
            } else {
                System.out.println("closed by user");
            }
        }
    }//GEN-LAST:event_statsSequenceBTNactionPerformed

    private boolean validateInputStats() {
        if (GSFile == null || GSdirectory == null || gStatsFileTF.getText().equals("") || gOutputStatsDirectoryTF.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Please select the sequence file and the directory for the "
                    + "output to run the program.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    private void runBTN4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBTN4ActionPerformed
        // TODO add your handling code here:
        if(!validateInputStats()) {
            return;
        }
        GenerateStats gs = new GenerateStats();
        int result = gs.generateCountsStats(GSFile.getPath(),
            GSdirectory.getPath() + "/");
        gs.generateSeqWithLength(GSFile.getPath(),
            GSdirectory.getPath() + "/");
        JOptionPane.showMessageDialog(this, result + " have been parsed "
                + "from the sequence file", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_runBTN4ActionPerformed

    private boolean validateInputMatching() {
        if (gStatsFileTF1.getText().equals("") || gStatsFileTF2.getText().equals("")
                || gStatsFileTF3.getText().equals("") || gOutputStatsDirectoryTF1.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Please select the input files and the directory for the "
                    + "output to run the program.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    private void runBTN5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBTN5ActionPerformed
        // TODO add your handling code here:
        if(!validateInputMatching()) {
            return;
        }
        MatchingSequence matching = new MatchingSequence();
        System.out.println(gStatsFileTF1.getText());
        System.out.println(gStatsFileTF2.getText());
        System.out.println(gStatsFileTF3.getText());
        System.out.println(gOutputStatsDirectoryTF1.getText());
        int result = matching.generateMatchingFile(gStatsFileTF1.getText(), gStatsFileTF2.getText(), gStatsFileTF3.getText(), gOutputStatsDirectoryTF1.getText() +"/");
//        int[] result = gs.generateSequences(GSFile.getPath(),
//            GSdirectory.getPath() + "/", Integer.parseInt(sequenceLengthTF.getText()), included.isSelected());
        JOptionPane.showMessageDialog(this, "The file has been generated in the given directory", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_runBTN5ActionPerformed

    private void statsSequenceBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsSequenceBTN1ActionPerformed
        // TODO add your handling code here:
        GSfileChooser.addChoosableFileFilter(filter1);
        if (evt.getSource() == statsSequenceBTN1) {
            int returnVal = GSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSFile = GSfileChooser.getSelectedFile();
                gStatsFileTF1.setText(GSFile.getPath());
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == statsSequenceBTN2) {
            int returnVal = GSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSFile = GSfileChooser.getSelectedFile();
                gStatsFileTF2.setText(GSFile.getPath());
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == statsSequenceBTN3) {
            GSfileChooser.removeChoosableFileFilter(filter1);
            int returnVal = GSfileChooser.showDialog(this, "Choose");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSFile = GSfileChooser.getSelectedFile();
                gStatsFileTF3.setText(GSFile.getPath());
            } else {
                System.out.println("closed by user");
            }
        }
        if (evt.getSource() == statsOutputBTN1) {
            GSchooser.setMultiSelectionEnabled(false);
            GSchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int returnVal = GSchooser.showDialog(this, "Select");
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                GSdirectory = GSchooser.getSelectedFile();
                gOutputStatsDirectoryTF1.setText(GSdirectory.getAbsolutePath());
            } else {
                System.out.println("closed by user");
            }
        }
    }//GEN-LAST:event_statsSequenceBTN1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NTF;
    private javax.swing.JButton addChunkBTN;
    private javax.swing.JCheckBox advanceSettings;
    private javax.swing.JTextField allowedLetters;
    private javax.swing.JButton cOutputBTN;
    private javax.swing.JButton cOutputBTN1;
    private javax.swing.JTextField cOutputDirectoryTF;
    private javax.swing.JTextField cOutputDirectoryTF1;
    private javax.swing.JList chunkList;
    private javax.swing.JLabel chunkListL;
    private javax.swing.JButton controlNegaiveFileBTN;
    private javax.swing.JTextField controlNegativeFileTF;
    private javax.swing.JButton controlPositiveFileBTN;
    private javax.swing.JTextField controlPositiveFileTF;
    private javax.swing.JButton controlSequenceFileBTN;
    private javax.swing.JTextField controlSequenceFileTF;
    private javax.swing.JButton directoryBTN;
    private javax.swing.JTextField directoryTF;
    private javax.swing.JLabel disregardL;
    private javax.swing.JTextField disregardTF;
    private javax.swing.JTextField endTF;
    private javax.swing.JLabel exampleL;
    private javax.swing.JLabel firstChunkL;
    private javax.swing.JTextField firstChunkTF;
    private javax.swing.JTextField gOutputDirectoryTF;
    private javax.swing.JTextField gOutputStatsDirectoryTF;
    private javax.swing.JTextField gOutputStatsDirectoryTF1;
    private javax.swing.JTextField gSequenceFileTF;
    private javax.swing.JTextField gStatsFileTF;
    private javax.swing.JTextField gStatsFileTF1;
    private javax.swing.JTextField gStatsFileTF2;
    private javax.swing.JTextField gStatsFileTF3;
    private javax.swing.JCheckBox included;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton negaiveFileBTN;
    private javax.swing.JButton outputBTN;
    private javax.swing.JButton outputBTN1;
    private javax.swing.JButton outputBTN2;
    private javax.swing.JButton outputBTN5;
    private javax.swing.JButton outputBTN6;
    private javax.swing.JTextField outputDirectoryTF;
    private javax.swing.JTextField outputDirectoryTF1;
    private javax.swing.JButton positiveFileBTN;
    private javax.swing.JTextField positiveFileTF;
    private javax.swing.JTextField positiveFileTF1;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton reductionFileBTN;
    private javax.swing.JTextField reductionFileTF;
    private javax.swing.JButton removeChunkBTN;
    private javax.swing.JButton runBTN;
    private javax.swing.JButton runBTN1;
    private javax.swing.JButton runBTN2;
    private javax.swing.JButton runBTN3;
    private javax.swing.JButton runBTN4;
    private javax.swing.JButton runBTN5;
    private javax.swing.JButton sequenceBTN;
    private javax.swing.JButton sequenceBTN1;
    private javax.swing.JButton sequenceBTN2;
    private javax.swing.JTextField sequenceFileTF;
    private javax.swing.JTextField sequenceFileTF1;
    private javax.swing.JTextField sequenceLengthTF;
    private javax.swing.JLabel setChunkL;
    private javax.swing.JTextField startTF;
    private javax.swing.JButton statsOutputBTN;
    private javax.swing.JButton statsOutputBTN1;
    private javax.swing.JButton statsSequenceBTN;
    private javax.swing.JButton statsSequenceBTN1;
    private javax.swing.JButton statsSequenceBTN2;
    private javax.swing.JButton statsSequenceBTN3;
    private javax.swing.JLabel tableL;
    private javax.swing.JLabel takeL;
    private javax.swing.JTextField takeTF;
    // End of variables declaration//GEN-END:variables
}

class UppercaseDocumentFilter extends DocumentFilter {

    @Override
    public void insertString(DocumentFilter.FilterBypass fb, int offset,
            String text, AttributeSet attr) throws BadLocationException {

        if (!text.contains(" ")) {
            fb.insertString(offset, text.toUpperCase(), attr);
        }
    }

    @Override
    public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
            String text, AttributeSet attrs) throws BadLocationException {

        fb.replace(offset, length, text.toUpperCase(), attrs);
    }
}
